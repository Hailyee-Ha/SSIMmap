% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bandwidth.R
\name{bandwidth}
\alias{bandwidth}
\title{Finding bandwidth ranges for the SSIM Index for polygon maps}
\usage{
bandwidth(
  shape,
  map1,
  map2,
  max_bandwidth = max_bandwidth,
  standarize = TRUE,
  option = "midpoint"
)
}
\arguments{
\item{shape}{a SpatialPolygonsDataFrame containing the polygon data with attributes that can create polygon-based maps}

\item{map1}{the name of the first map to compare}

\item{map2}{the name of the second map to compare}

\item{max_bandwidth}{maximum size of the bandwidth, and the maximum size needs to be larger than 12}

\item{option}{the option for selecting the range of the bandwidth derived from the optimal trade-off between bias and variance. Default is "midpoint"}

\item{standardize}{if TRUE, standardize the variables before computing the SSIM. Default is TRUE.}
}
\value{
a plot showing the bias/variance trade off and the range of the optimal trade-off as vertical lines including the square root of N results as well. In addition, the console shows the results.
}
\description{
This function calculates the range of the bandwidth for the SSIM index using the square root of N and optimal trade-off between bias and variance
}
\details{
This function calculates the bandwidth range for the SSIM index for polygon maps using Gaussian kernel weighting.
The bandwidth is calculated by two methods: 1) the square root of N and 2) the optimal trade-off between bias and variance.
Users can select the bandwidth values from the range of the optimal trade-off,which minimize the trade-off between bias and variance, generated by two maps.
}
\examples{
# Load example sf polygon(Toronto Areas with attributes for maps:Pampalon Index,CIMD Index, and percentage of household commuting within the same Census Sub Division of residence)
shape<-SSIMmap::Toronto_example

# Mapping two attributes
plot(shape$CIMD_SDD)
plot(shape$PP_SDD)

#Excution of bandwidht with maps above
\donttest{
bandwidth(shape,CIMD_SDD,PP_SDD,max_bandwidth=500)
}

}
