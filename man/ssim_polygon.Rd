% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssim_polygon.R
\name{ssim_polygon}
\alias{ssim_polygon}
\title{Calculate the structural similarity index measure for polygon maps.}
\usage{
ssim_polygon(
  shape,
  map1,
  map2,
  standardize = TRUE,
  bandwidth = NULL,
  k1 = NULL,
  k2 = NULL,
  global = TRUE
)
}
\arguments{
\item{shape}{a a \code{sf} polygon containing the polygon data with attributes that can create polygon-based maps}

\item{map1}{the name of the first map to compare as a column in the shape}

\item{map2}{the name of the second map to compare as a column in the shape}

\item{standardize}{If TRUE, standardize the variables before computing the SSIM. Default is TRUE.}

\item{bandwidth}{bandwidth for the Gaussian kernel weighting used in the SSIM calculation. Default is the square root of N}

\item{k1}{the constant used in the SSIM calculation. Default is NULL, in which case it is computed from the maximum value of variables.}

\item{k2}{the constant used in the SSIM calculation. Default is NULL, in which case it is computed from the maximum value of variables.}

\item{global}{If global is True, returning the global average of SSIM, SIM, SIV, and SIP. If the option is FALSE, a a \code{sf} SpatialPolygonsDataFrame containing the SSIM, SIM, SIV, and SIP for each polygon is returned
Default is TRUE}
}
\value{
If global is TRUE, a string containing the global average SSIM, SIM, SIV, and SIP.
If global is FALSE, a \code{sf} polygon containing the SSIM, SIM, SIV, and SIP for each polygon.
}
\description{
This function computes the SSIM, a measure of similarity between two polygon maps.
The ssim_polygon function computes the SSIM for each polygon and can be returned as a global average or for each polygon as a \code{sf} object
}
\details{
This function computes the SSIM index for two polygon maps.
}
\examples{
Load example sf object Toronto Area with attributes for maps:
Pampalon Index,CIMD Index,
and percentage of household commuting within the same Census Sub Division of residence
shape<-SSIMmap::Toronto

Mapping two attributes
plot(shape$CIMD_SDD)
plot(shape$PP_SDD)
Finding global ssim

ssim_polygon(shape,"CIMD_SDD","PP_SDD")
#Finding local ssim
df<-ssim_polygon(shape,"CIMD_SDD","PP_SDD",global=FALSE)
}
